Puuttuu toistaiseksi ratkaisut 2.7 ja 2.9, sis채lt채채 ratkaisut tiedon haku palvelimelta teht채viin 2.11

index.js


import ReactDOM from "react-dom"
import App from "./App"

ReactDOM.render(<App />, document.getElementById("root"))



App.js

import { useState, useEffect } from 'react'
import axios from 'axios'

function PersonForm({addPersonToNumbers}) {
 
  const [newName, setNewName] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");

 const handleSubmit = (e) => {
    e.preventDefault();
    alert(`${newName} is already added to phonebook`)
    addPersonToNumbers({ newName, phoneNumber });
    setNewName("")
    setPhoneNumber("")   
  };

  return (
    <form
      onSubmit={handleSubmit} 
    >
      name: <input
        type="text"
        name="firstName"
        placeholder="first name"
        value={newName}
        onChange={(e) => {
        setNewName(e.target.value)}}
      
      />
      <br></br>
      phonenumber: <input
        type="text"
        name="phoneNumber"
        placeholder="phonenumber"
        value={phoneNumber}
        onChange={(e) => setPhoneNumber(e.target.value)}
      />
      <br></br>
      <button type="submit" onSubmit={handleSubmit}>
        add
      </button>
    </form>
  );
}

function Header(){
   return(
    <div>
      <h2>
        PHONEBOOK APP
      </h2>
    </div>
  );}

function Persons({ persons }) {
  
  return (
    <div>
      <h4>
          {persons.map((person, i) => 
          <div key={i}>
           {person.name}<br></br>{person.number}<br></br>{person.id}
           {person.newName}<br></br>{person.phoneNumber}
          </div>
        )}
      </h4>
    </div>
  );
}


function App() {
  const [persons, setPersons] = useState([]);

  useEffect(() => {
    console.log('effect')
    axios
      .get('http://localhost:3001/persons')
      .then(response => {
        console.log('promise fulfilled')
        setPersons(response.data)
      })
  }, [])
  console.log('render', persons.length, 'persons')
  

  const addPersonToNumbers = (person) => {
      
    setPersons(
      [...persons, person]
    )
  };

  return (
    <div> 
      <Header/>
      <h3>Add a new</h3>
      <PersonForm addPersonToNumbers={addPersonToNumbers} />
      <h3>Numbers</h3>
      <Persons persons={persons} /> 
    </div>
  );
}

export default App;

db.json

{
  "persons":[
    { 
      "name": "Arto Hellas", 
      "number": "040-123456",
      "id": 1
    },
    { 
      "name": "Ada Lovelace", 
      "number": "39-44-5323523",
      "id": 2
    },
    { 
      "name": "Dan Abramov", 
      "number": "12-43-234345",
      "id": 3
    },
    { 
      "name": "Mary Poppendieck", 
      "number": "39-23-6423122",
      "id": 4
    }
  ]
}
